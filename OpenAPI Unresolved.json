{
  "openapi": "3.0.3",
  "info": {
    "title": "Google Calendar API",
    "description": "The Google Calendar API lets you integrate your app with Google Calendar, \ncreating new ways for users to engage with their calendars.\n",
    "contact": {
      "name": "Google Calendar API",
      "url": "https://developers.google.com/calendar"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "v3"
  },
  "servers": [
    {
      "url": "https://www.googleapis.com/calendar/v3",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "OAuth2": []
    },
    {
      "ApiKey": []
    }
  ],
  "tags": [
    {
      "name": "Calendars",
      "description": "Operations for managing calendars"
    },
    {
      "name": "Events",
      "description": "Operations for managing calendar events"
    },
    {
      "name": "Freebusy",
      "description": "Operations for querying free/busy information"
    }
  ],
  "paths": {
    "/calendars": {
      "post": {
        "tags": [
          "Calendars"
        ],
        "summary": "Create a calendar",
        "operationId": "createCalendar",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Calendar"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Calendar created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/calendars/{calendarId}": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "summary": "Get calendar details",
        "operationId": "getCalendar",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "Calendar identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "primary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Calendars"
        ],
        "summary": "Update a calendar",
        "operationId": "updateCalendar",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "Calendar identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "primary"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Calendar"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Calendar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Calendars"
        ],
        "summary": "Delete a calendar",
        "operationId": "deleteCalendar",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "Calendar identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "primary"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Calendar deleted successfully"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/users/me/calendarList": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "summary": "List calendars",
        "operationId": "listCalendars",
        "parameters": [
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of entries returned",
            "required": false,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "Token for pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showDeleted",
            "in": "query",
            "description": "Whether to include deleted calendar list entries",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "showHidden",
            "in": "query",
            "description": "Whether to show hidden entries",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of calendars",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/calendars/{calendarId}/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "List events",
        "operationId": "listEvents",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "Calendar identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "primary"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of events returned",
            "required": false,
            "schema": {
              "maximum": 2500,
              "minimum": 1,
              "type": "integer",
              "default": 250
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "Token for pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeMin",
            "in": "query",
            "description": "Lower bound for event start time (RFC3339)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "timeMax",
            "in": "query",
            "description": "Upper bound for event start time (RFC3339)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Free text search terms",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order of events returned",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "startTime",
                "updated"
              ]
            }
          },
          {
            "name": "singleEvents",
            "in": "query",
            "description": "Whether to expand recurring events",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create an event",
        "operationId": "createEvent",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "Calendar identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "primary"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/calendars/{calendarId}/events/{eventId}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get event details",
        "operationId": "getEvent",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "Calendar identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "primary"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Event identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Update an event",
        "operationId": "updateEvent",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "Calendar identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "primary"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Event identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Event updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Delete an event",
        "operationId": "deleteEvent",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "Calendar identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "primary"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Event identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Event deleted successfully"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/calendars/{calendarId}/events/quickAdd": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Quick add event",
        "description": "Creates an event based on a simple text string",
        "operationId": "quickAddEvent",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "description": "Calendar identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "primary"
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "The text describing the event",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Appointment at Somewhere on June 3rd 10am-10:25am"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/freeBusy": {
      "post": {
        "tags": [
          "Freebusy"
        ],
        "summary": "Query free/busy information",
        "operationId": "queryFreeBusy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/freeBusy_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Free/busy information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Calendar": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "example": "calendar#calendar"
          },
          "etag": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Calendar identifier"
          },
          "summary": {
            "type": "string",
            "description": "Title of the calendar"
          },
          "description": {
            "type": "string",
            "description": "Description of the calendar"
          },
          "location": {
            "type": "string",
            "description": "Geographic location of the calendar"
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone of the calendar"
          },
          "conferenceProperties": {
            "$ref": "#/components/schemas/Calendar_conferenceProperties"
          }
        }
      },
      "CalendarListEntry": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "example": "calendar#calendarListEntry"
          },
          "etag": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "summaryOverride": {
            "type": "string"
          },
          "colorId": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "selected": {
            "type": "boolean"
          },
          "accessRole": {
            "type": "string",
            "enum": [
              "freeBusyReader",
              "reader",
              "writer",
              "owner"
            ]
          },
          "defaultReminders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventReminder"
            }
          },
          "primary": {
            "type": "boolean"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "example": "calendar#event"
          },
          "etag": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "confirmed",
              "tentative",
              "cancelled"
            ]
          },
          "htmlLink": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "summary": {
            "type": "string",
            "description": "Title of the event"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "colorId": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/EventPerson"
          },
          "organizer": {
            "$ref": "#/components/schemas/EventPerson"
          },
          "start": {
            "$ref": "#/components/schemas/EventDateTime"
          },
          "end": {
            "$ref": "#/components/schemas/EventDateTime"
          },
          "endTimeUnspecified": {
            "type": "boolean"
          },
          "recurrence": {
            "type": "array",
            "description": "RRULE, RDATE, EXRULE and EXDATE lines",
            "items": {
              "type": "string"
            }
          },
          "recurringEventId": {
            "type": "string"
          },
          "originalStartTime": {
            "$ref": "#/components/schemas/EventDateTime"
          },
          "transparency": {
            "type": "string",
            "enum": [
              "opaque",
              "transparent"
            ]
          },
          "visibility": {
            "type": "string",
            "enum": [
              "default",
              "public",
              "private",
              "confidential"
            ]
          },
          "iCalUID": {
            "type": "string"
          },
          "sequence": {
            "type": "integer"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventAttendee"
            }
          },
          "attendeesOmitted": {
            "type": "boolean"
          },
          "extendedProperties": {
            "$ref": "#/components/schemas/Event_extendedProperties"
          },
          "hangoutLink": {
            "type": "string"
          },
          "conferenceData": {
            "$ref": "#/components/schemas/ConferenceData"
          },
          "gadget": {
            "type": "object"
          },
          "anyoneCanAddSelf": {
            "type": "boolean"
          },
          "guestsCanInviteOthers": {
            "type": "boolean"
          },
          "guestsCanModify": {
            "type": "boolean"
          },
          "guestsCanSeeOtherGuests": {
            "type": "boolean"
          },
          "privateCopy": {
            "type": "boolean"
          },
          "locked": {
            "type": "boolean"
          },
          "reminders": {
            "$ref": "#/components/schemas/Event_reminders"
          },
          "source": {
            "$ref": "#/components/schemas/Event_source"
          },
          "workingLocationProperties": {
            "type": "object"
          }
        }
      },
      "EventDateTime": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date for all-day events (YYYY-MM-DD)",
            "format": "date"
          },
          "dateTime": {
            "type": "string",
            "description": "Combined date-time value (RFC3339)",
            "format": "date-time"
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone identifier"
          }
        }
      },
      "EventPerson": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "self": {
            "type": "boolean"
          }
        }
      },
      "EventAttendee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventPerson"
          },
          {
            "type": "object",
            "properties": {
              "organizer": {
                "type": "boolean"
              },
              "resource": {
                "type": "boolean"
              },
              "optional": {
                "type": "boolean"
              },
              "responseStatus": {
                "type": "string",
                "enum": [
                  "needsAction",
                  "declined",
                  "tentative",
                  "accepted"
                ]
              },
              "comment": {
                "type": "string"
              },
              "additionalGuests": {
                "type": "integer"
              }
            }
          }
        ]
      },
      "EventReminder": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "email",
              "popup"
            ]
          },
          "minutes": {
            "type": "integer",
            "description": "Minutes before the event"
          }
        }
      },
      "ConferenceData": {
        "type": "object",
        "properties": {
          "createRequest": {
            "type": "object"
          },
          "entryPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConferenceData_entryPoints"
            }
          },
          "conferenceSolution": {
            "$ref": "#/components/schemas/ConferenceData_conferenceSolution"
          },
          "conferenceId": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error_error"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "example": "calendar#calendarList"
          },
          "etag": {
            "type": "string"
          },
          "nextPageToken": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarListEntry"
            }
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "example": "calendar#events"
          },
          "etag": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "nextPageToken": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "freeBusy_items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Calendar identifier"
          }
        }
      },
      "freeBusy_body": {
        "required": [
          "items",
          "timeMax",
          "timeMin"
        ],
        "type": "object",
        "properties": {
          "timeMin": {
            "type": "string",
            "description": "Start of the interval",
            "format": "date-time"
          },
          "timeMax": {
            "type": "string",
            "description": "End of the interval",
            "format": "date-time"
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone used in the response"
          },
          "groupExpansionMax": {
            "type": "integer",
            "description": "Maximum number of calendar group members"
          },
          "calendarExpansionMax": {
            "type": "integer",
            "description": "Maximum number of calendar list members"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/freeBusy_items"
            }
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "example": "calendar#freeBusy"
          },
          "timeMin": {
            "type": "string",
            "format": "date-time"
          },
          "timeMax": {
            "type": "string",
            "format": "date-time"
          },
          "calendars": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/inline_response_200_2_calendars"
            }
          }
        }
      },
      "Calendar_conferenceProperties": {
        "type": "object",
        "properties": {
          "allowedConferenceSolutionTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Event_extendedProperties": {
        "type": "object",
        "properties": {
          "private": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "shared": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Event_reminders": {
        "type": "object",
        "properties": {
          "useDefault": {
            "type": "boolean"
          },
          "overrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventReminder"
            }
          }
        }
      },
      "Event_source": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "ConferenceData_entryPoints": {
        "type": "object",
        "properties": {
          "entryPointType": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "pin": {
            "type": "string"
          },
          "accessCode": {
            "type": "string"
          },
          "meetingCode": {
            "type": "string"
          },
          "passcode": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ConferenceData_conferenceSolution_key": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "ConferenceData_conferenceSolution": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/ConferenceData_conferenceSolution_key"
          },
          "name": {
            "type": "string"
          },
          "iconUri": {
            "type": "string"
          }
        }
      },
      "Error_error_errors": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "locationType": {
            "type": "string"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "Error_error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error_error_errors"
            }
          }
        }
      },
      "inline_response_200_2_busy": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "inline_response_200_2_errors": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "inline_response_200_2_calendars": {
        "type": "object",
        "properties": {
          "busy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_2_busy"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_2_errors"
            }
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "parameters": {
      "CalendarId": {
        "name": "calendarId",
        "in": "path",
        "description": "Calendar identifier",
        "required": true,
        "schema": {
          "type": "string",
          "example": "primary"
        }
      },
      "EventId": {
        "name": "eventId",
        "in": "path",
        "description": "Event identifier",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
            "tokenUrl": "https://oauth2.googleapis.com/token",
            "scopes": {
              "https://www.googleapis.com/auth/calendar.readonly": "Read-only access to calendars",
              "https://www.googleapis.com/auth/calendar": "Full access to calendars",
              "https://www.googleapis.com/auth/calendar.events": "Access to events"
            }
          }
        }
      },
      "ApiKey": {
        "type": "apiKey",
        "name": "key",
        "in": "query"
      }
    }
  }
}

{
  "openapi": "3.1.0",
  "info": {
    "title": "Calendar",
    "contact": {},
    "version": "v1.0"
  },
  "jsonSchemaDialect": "https://json-schema.org/draft/2020-12/schema",
  "servers": [
    {
      "url": "https://graph.microsoft.com/v1.0/",
      "description": "Core",
      "variables": {}
    },
    {
      "url": "https://login.microsoftonline.com/common/oauth2/v2.0",
      "description": "Core",
      "variables": {}
    }
  ],
  "paths": {
    "/groups/{group-id}/calendar": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group_GetCalendar",
        "description": "The group's calendar. Read-only.",
        "operationId": "group_GetCalendar",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarPermissions": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_ListCalendarPermission",
        "description": "The permissions of the users with whom the calendar is shared.",
        "operationId": "group.calendar_ListCalendarPermission",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionofcalendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_CreateCalendarPermission",
        "description": "",
        "operationId": "group.calendar_CreateCalendarPermission",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarPermissions/{calendarPermission-id}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_GetCalendarPermission",
        "description": "The permissions of the users with whom the calendar is shared.",
        "operationId": "group.calendar_GetCalendarPermission",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_UpdateCalendarPermission",
        "description": "",
        "operationId": "group.calendar_UpdateCalendarPermission",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_DeleteCalendarPermission",
        "description": "",
        "operationId": "group.calendar_DeleteCalendarPermission",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarPermissions/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarPermission_GetCount",
        "description": "",
        "operationId": "group.calendar.calendarPermission_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_ListCalendarView",
        "description": "The calendar view for the calendar. Navigation property. Read-only.",
        "operationId": "group.calendar_ListCalendarView",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_GetCalendarView",
        "description": "The calendar view for the calendar. Navigation property. Read-only.",
        "operationId": "group.calendar_GetCalendarView",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/attachments": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.calendarView_ListAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_CreateAttachment",
        "description": "",
        "operationId": "group.calendar.calendarView_CreateAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.calendarView_GetAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_DeleteAttachment",
        "description": "",
        "operationId": "group.calendar.calendarView_DeleteAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.attachment_GetCount",
        "description": "",
        "operationId": "group.calendar.calendarView.attachment_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView.attachment_createUploadSession",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/calendar": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "group.calendar.calendarView_GetCalendar",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/extensions": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendar.calendarView_ListExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_CreateExtension",
        "description": "",
        "operationId": "group.calendar.calendarView_CreateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendar.calendarView_GetExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_UpdateExtension",
        "description": "",
        "operationId": "group.calendar.calendarView_UpdateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_DeleteExtension",
        "description": "",
        "operationId": "group.calendar.calendarView_DeleteExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.extension_GetCount",
        "description": "",
        "operationId": "group.calendar.calendarView.extension_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.calendarView_ListInstance",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.calendarView_GetInstance",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.calendarView.instance_ListAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_CreateAttachment",
        "description": "",
        "operationId": "group.calendar.calendarView.instance_CreateAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.calendarView.instance_GetAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_DeleteAttachment",
        "description": "",
        "operationId": "group.calendar.calendarView.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance.attachment_GetCount",
        "description": "",
        "operationId": "group.calendar.calendarView.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "group.calendar.calendarView.instance_GetCalendar",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendar.calendarView.instance_ListExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_CreateExtension",
        "description": "",
        "operationId": "group.calendar.calendarView.instance_CreateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendar.calendarView.instance_GetExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_UpdateExtension",
        "description": "",
        "operationId": "group.calendar.calendarView.instance_UpdateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_DeleteExtension",
        "description": "",
        "operationId": "group.calendar.calendarView.instance_DeleteExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance.extension_GetCount",
        "description": "",
        "operationId": "group.calendar.calendarView.instance.extension_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView.instance_accept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView.instance_cancel",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView.instance_decline",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView.instance_dismissReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView.instance_forward",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_permanentDelete",
        "description": "",
        "operationId": "group.calendar.calendarView.instance_permanentDelete",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView.instance_snoozeReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_GetCount",
        "description": "",
        "operationId": "group.calendar.calendarView.instance_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView.instance_delta",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView_accept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView_cancel",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView_decline",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView_dismissReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView_forward",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_permanentDelete",
        "description": "",
        "operationId": "group.calendar.calendarView_permanentDelete",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView_snoozeReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView_tentativelyAccept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarCalendarViewMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_GetCount",
        "description": "",
        "operationId": "group.calendar.calendarView_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/calendarView/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.calendarView_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.calendarView_delta",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_ListEvent",
        "description": "The events in the calendar. Navigation property. Read-only.",
        "operationId": "group.calendar_ListEvent",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_CreateEvent",
        "description": "",
        "operationId": "group.calendar_CreateEvent",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_GetEvent",
        "description": "The events in the calendar. Navigation property. Read-only.",
        "operationId": "group.calendar_GetEvent",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_UpdateEvent",
        "description": "Update an event object.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/group-update-event?view=graph-rest-1.0"
        },
        "operationId": "group.calendar_UpdateEvent",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_DeleteEvent",
        "description": "",
        "operationId": "group.calendar_DeleteEvent",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/attachments": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.event_ListAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_CreateAttachment",
        "description": "",
        "operationId": "group.calendar.event_CreateAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.event_GetAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_DeleteAttachment",
        "description": "",
        "operationId": "group.calendar.event_DeleteAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.attachment_GetCount",
        "description": "",
        "operationId": "group.calendar.event.attachment_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event.attachment_createUploadSession",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/calendar": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "group.calendar.event_GetCalendar",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/extensions": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendar.event_ListExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_CreateExtension",
        "description": "",
        "operationId": "group.calendar.event_CreateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendar.event_GetExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_UpdateExtension",
        "description": "",
        "operationId": "group.calendar.event_UpdateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_DeleteExtension",
        "description": "",
        "operationId": "group.calendar.event_DeleteExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.extension_GetCount",
        "description": "",
        "operationId": "group.calendar.event.extension_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.event_ListInstance",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.event_GetInstance",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.event.instance_ListAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_CreateAttachment",
        "description": "",
        "operationId": "group.calendar.event.instance_CreateAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendar.event.instance_GetAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_DeleteAttachment",
        "description": "",
        "operationId": "group.calendar.event.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance.attachment_GetCount",
        "description": "",
        "operationId": "group.calendar.event.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "group.calendar.event.instance_GetCalendar",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendar.event.instance_ListExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_CreateExtension",
        "description": "",
        "operationId": "group.calendar.event.instance_CreateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendar.event.instance_GetExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_UpdateExtension",
        "description": "",
        "operationId": "group.calendar.event.instance_UpdateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_DeleteExtension",
        "description": "",
        "operationId": "group.calendar.event.instance_DeleteExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance.extension_GetCount",
        "description": "",
        "operationId": "group.calendar.event.instance.extension_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event.instance_accept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event.instance_cancel",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event.instance_decline",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event.instance_dismissReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event.instance_forward",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_permanentDelete",
        "description": "",
        "operationId": "group.calendar.event.instance_permanentDelete",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event.instance_snoozeReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_GetCount",
        "description": "",
        "operationId": "group.calendar.event.instance_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event.instance_delta",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event_accept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event_cancel",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event_decline",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event_dismissReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event_forward",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_permanentDelete",
        "description": "",
        "operationId": "group.calendar.event_permanentDelete",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event_snoozeReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event_tentativelyAccept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarEventsMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/$count": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_GetCount",
        "description": "",
        "operationId": "group.calendar.event_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/events/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar.event_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "group.calendar.event_delta",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/microsoft.graph.allowedCalendarSharingRoles(User='{User}')": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_allowedCalendarSharingRole",
        "description": "",
        "operationId": "group.calendar_allowedCalendarSharingRole",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User",
            "in": "path",
            "description": "Usage: User='{User}'",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupsCalendarMicrosoftGraphAllowedCalendarSharingRolesUserAPIResponse"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/microsoft.graph.getSchedule": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_getSchedule",
        "description": "Get the free/busy availability information for a collection of users, distributions lists, or resources (rooms or equipment) for a specified time period.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendar-getschedule?view=graph-rest-1.0"
        },
        "operationId": "group.calendar_getSchedule",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarMicrosoftGraphGetScheduleRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupsCalendarMicrosoftGraphGetScheduleResponse"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendar/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "group.calendar_permanentDelete",
        "description": "Permanently delete a calendar folder and the events that it contains and remove them from the mailbox. For more information about item retention, see Configure deleted item retention and recoverable items quotas.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendar-permanentdelete?view=graph-rest-1.0"
        },
        "operationId": "group.calendar_permanentDelete",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group_ListCalendarView",
        "description": "Get the occurrences, exceptions, and single instances of events in a calendar view defined by a time range,\nfrom the default calendar of a group.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/group-list-calendarview?view=graph-rest-1.0"
        },
        "operationId": "group_ListCalendarView",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group_GetCalendarView",
        "description": "The calendar view for the calendar. Read-only.",
        "operationId": "group_GetCalendarView",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/attachments": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendarView_ListAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_CreateAttachment",
        "description": "",
        "operationId": "group.calendarView_CreateAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendarView_GetAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_DeleteAttachment",
        "description": "",
        "operationId": "group.calendarView_DeleteAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.attachment_GetCount",
        "description": "",
        "operationId": "group.calendarView.attachment_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView.attachment_createUploadSession",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/calendar": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "group.calendarView_GetCalendar",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/extensions": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendarView_ListExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_CreateExtension",
        "description": "",
        "operationId": "group.calendarView_CreateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendarView_GetExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_UpdateExtension",
        "description": "",
        "operationId": "group.calendarView_UpdateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_DeleteExtension",
        "description": "",
        "operationId": "group.calendarView_DeleteExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.extension_GetCount",
        "description": "",
        "operationId": "group.calendarView.extension_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendarView_ListInstance",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendarView_GetInstance",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendarView.instance_ListAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_CreateAttachment",
        "description": "",
        "operationId": "group.calendarView.instance_CreateAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.calendarView.instance_GetAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_DeleteAttachment",
        "description": "",
        "operationId": "group.calendarView.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance.attachment_GetCount",
        "description": "",
        "operationId": "group.calendarView.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "group.calendarView.instance_GetCalendar",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendarView.instance_ListExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_CreateExtension",
        "description": "",
        "operationId": "group.calendarView.instance_CreateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.calendarView.instance_GetExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_UpdateExtension",
        "description": "",
        "operationId": "group.calendarView.instance_UpdateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_DeleteExtension",
        "description": "",
        "operationId": "group.calendarView.instance_DeleteExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance.extension_GetCount",
        "description": "",
        "operationId": "group.calendarView.instance.extension_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView.instance_accept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView.instance_cancel",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView.instance_decline",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView.instance_dismissReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView.instance_forward",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_permanentDelete",
        "description": "",
        "operationId": "group.calendarView.instance_permanentDelete",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView.instance_snoozeReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_GetCount",
        "description": "",
        "operationId": "group.calendarView.instance_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView.instance_delta",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView_accept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView_cancel",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView_decline",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView_dismissReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView_forward",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_permanentDelete",
        "description": "",
        "operationId": "group.calendarView_permanentDelete",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView_snoozeReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView_tentativelyAccept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsCalendarViewMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_GetCount",
        "description": "",
        "operationId": "group.calendarView_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/calendarView/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.calendarView_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "group.calendarView_delta",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group_ListEvent",
        "description": "Retrieve a list of event objects.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/group-list-events?view=graph-rest-1.0"
        },
        "operationId": "group_ListEvent",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group_CreateEvent",
        "description": "Use this API to create a new event.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/group-post-events?view=graph-rest-1.0"
        },
        "operationId": "group_CreateEvent",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group_GetEvent",
        "description": "Get an event object.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/group-get-event?view=graph-rest-1.0"
        },
        "operationId": "group_GetEvent",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups.event"
        ],
        "summary": "group_UpdateEvent",
        "description": "",
        "operationId": "group_UpdateEvent",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.event"
        ],
        "summary": "group_DeleteEvent",
        "description": "Delete an event object.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/group-delete-event?view=graph-rest-1.0"
        },
        "operationId": "group_DeleteEvent",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/attachments": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.event_ListAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_CreateAttachment",
        "description": "",
        "operationId": "group.event_CreateAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.event_GetAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_DeleteAttachment",
        "description": "",
        "operationId": "group.event_DeleteAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.attachment_GetCount",
        "description": "",
        "operationId": "group.event.attachment_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "group.event.attachment_createUploadSession",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/calendar": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "group.event_GetCalendar",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/extensions": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_ListExtension",
        "description": "Get an open extension (openTypeExtension object) identified by name or fully qualified name. The table in the Permissions section lists the resources that support open extensions. The following table lists the three scenarios where you can get an open extension from a supported resource instance.",
        "operationId": "group.event_ListExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_CreateExtension",
        "description": "Create an open extension (openTypeExtension object) and add custom properties in a new or existing instance of a resource. You can create an open extension in a resource instance and store custom data to it all in the same operation, except for specific resources. The table in the Permissions section lists the resources that support open extensions.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/opentypeextension-post-opentypeextension?view=graph-rest-1.0"
        },
        "operationId": "group.event_CreateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_GetExtension",
        "description": "Get an open extension (openTypeExtension object) identified by name or fully qualified name. The table in the Permissions section lists the resources that support open extensions. The following table lists the three scenarios where you can get an open extension from a supported resource instance.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/opentypeextension-get?view=graph-rest-1.0"
        },
        "operationId": "group.event_GetExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_UpdateExtension",
        "description": "",
        "operationId": "group.event_UpdateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_DeleteExtension",
        "description": "",
        "operationId": "group.event_DeleteExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.extension_GetCount",
        "description": "",
        "operationId": "group.event.extension_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "group.event_ListInstance",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "group.event_GetInstance",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.event.instance_ListAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_CreateAttachment",
        "description": "",
        "operationId": "group.event.instance_CreateAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "group.event.instance_GetAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_DeleteAttachment",
        "description": "",
        "operationId": "group.event.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance.attachment_GetCount",
        "description": "",
        "operationId": "group.event.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "group.event.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "group.event.instance_GetCalendar",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.event.instance_ListExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_CreateExtension",
        "description": "",
        "operationId": "group.event.instance_CreateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "group.event.instance_GetExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_UpdateExtension",
        "description": "",
        "operationId": "group.event.instance_UpdateExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_DeleteExtension",
        "description": "",
        "operationId": "group.event.instance_DeleteExtension",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance.extension_GetCount",
        "description": "",
        "operationId": "group.event.instance.extension_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "group.event.instance_accept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "group.event.instance_cancel",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "group.event.instance_decline",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "group.event.instance_dismissReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "group.event.instance_forward",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_permanentDelete",
        "description": "",
        "operationId": "group.event.instance_permanentDelete",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "group.event.instance_snoozeReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "group.event.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_GetCount",
        "description": "",
        "operationId": "group.event.instance_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "group.event.instance_delta",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "group.event_accept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "group.event_cancel",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "group.event_decline",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "group.event_dismissReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "group.event_forward",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_permanentDelete",
        "description": "",
        "operationId": "group.event_permanentDelete",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "group.event_snoozeReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "group.event_tentativelyAccept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GroupsEventsMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/$count": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_GetCount",
        "description": "",
        "operationId": "group.event_GetCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/groups/{group-id}/events/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "group.event_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "group.event_delta",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "The unique identifier of group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/places/{place-id}": {
      "patch": {
        "tags": [
          "places.place"
        ],
        "summary": "place_UpdatePlace",
        "description": "Update the properties of place object, which can be a room or roomList. You can identify the room or roomList by specifying the id or emailAddress property.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/place-update?view=graph-rest-1.0"
        },
        "operationId": "place_UpdatePlace",
        "parameters": [
          {
            "name": "place-id",
            "in": "path",
            "description": "The unique identifier of place",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.place"
                  },
                  {
                    "description": "New property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.place"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "places.place"
        ],
        "summary": "place_DeletePlace",
        "description": "",
        "operationId": "place_DeletePlace",
        "parameters": [
          {
            "name": "place-id",
            "in": "path",
            "description": "The unique identifier of place",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/places/{place-id}/microsoft.graph.room": {
      "get": {
        "tags": [
          "places.place"
        ],
        "summary": "place_GetPlaceAsRoom",
        "description": "Get a collection of the specified type of place objects defined in the tenant. For example, you can get all the rooms, all the room lists, or the rooms in a specific room list in the tenant. A place object can be one of the following types: Both room and roomList are derived from the place object. By default, this operation returns 100 places per page. Compared with the findRooms and findRoomLists functions, this operation returns a richer payload for rooms and room lists. See details for how they compare.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/place-list?view=graph-rest-1.0"
        },
        "operationId": "place_GetPlaceAsRoom",
        "parameters": [
          {
            "name": "place-id",
            "in": "path",
            "description": "The unique identifier of place",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Entity result.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.room"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/places/{place-id}/microsoft.graph.roomList": {
      "get": {
        "tags": [
          "places.place"
        ],
        "summary": "place_GetPlaceAsRoomList",
        "description": "",
        "operationId": "place_GetPlaceAsRoomList",
        "parameters": [
          {
            "name": "place-id",
            "in": "path",
            "description": "The unique identifier of place",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Entity result.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.roomList"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/places/$count": {
      "get": {
        "tags": [
          "places.place"
        ],
        "summary": "place_GetCount",
        "description": "",
        "operationId": "place_GetCount",
        "parameters": [
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/places/microsoft.graph.room": {
      "get": {
        "tags": [
          "places.place"
        ],
        "summary": "place_ListPlaceAsRoom",
        "description": "Get a collection of the specified type of place objects defined in the tenant. For example, you can get all the rooms, all the room lists, or the rooms in a specific room list in the tenant. A place object can be one of the following types: Both room and roomList are derived from the place object. By default, this operation returns 100 places per page. Compared with the findRooms and findRoomLists functions, this operation returns a richer payload for rooms and room lists. See details for how they compare.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/place-list?view=graph-rest-1.0"
        },
        "operationId": "place_ListPlaceAsRoom",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofroom"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/places/microsoft.graph.room/$count": {
      "get": {
        "tags": [
          "places.place"
        ],
        "summary": "place_GetCountAsRoom",
        "description": "",
        "operationId": "place_GetCountAsRoom",
        "parameters": [
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/places/microsoft.graph.roomList": {
      "get": {
        "tags": [
          "places.place"
        ],
        "summary": "place_ListPlaceAsRoomList",
        "description": "",
        "operationId": "place_ListPlaceAsRoomList",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionofroomList"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/places/microsoft.graph.roomList/$count": {
      "get": {
        "tags": [
          "places.place"
        ],
        "summary": "place_GetCountAsRoomList",
        "description": "",
        "operationId": "place_GetCountAsRoomList",
        "parameters": [
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/places/{place-id}/microsoft.graph.roomList/rooms": {
      "get": {
        "tags": [
          "places.room"
        ],
        "summary": "placeAsRoomList_ListRoom",
        "description": "",
        "operationId": "placeAsRoomList_ListRoom",
        "parameters": [
          {
            "name": "place-id",
            "in": "path",
            "description": "The unique identifier of place",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofroom"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "places.room"
        ],
        "summary": "placeAsRoomList_CreateRoom",
        "description": "",
        "operationId": "placeAsRoomList_CreateRoom",
        "parameters": [
          {
            "name": "place-id",
            "in": "path",
            "description": "The unique identifier of place",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.room"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.room"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/places/{place-id}/microsoft.graph.roomList/rooms/{room-id}": {
      "get": {
        "tags": [
          "places.room"
        ],
        "summary": "placeAsRoomList_GetRoom",
        "description": "",
        "operationId": "placeAsRoomList_GetRoom",
        "parameters": [
          {
            "name": "place-id",
            "in": "path",
            "description": "The unique identifier of place",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "room-id",
            "in": "path",
            "description": "The unique identifier of room",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.room"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "places.room"
        ],
        "summary": "placeAsRoomList_UpdateRoom",
        "description": "",
        "operationId": "placeAsRoomList_UpdateRoom",
        "parameters": [
          {
            "name": "place-id",
            "in": "path",
            "description": "The unique identifier of place",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "room-id",
            "in": "path",
            "description": "The unique identifier of room",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.room"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.room"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "places.room"
        ],
        "summary": "placeAsRoomList_DeleteRoom",
        "description": "",
        "operationId": "placeAsRoomList_DeleteRoom",
        "parameters": [
          {
            "name": "place-id",
            "in": "path",
            "description": "The unique identifier of place",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "room-id",
            "in": "path",
            "description": "The unique identifier of room",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/places/{place-id}/microsoft.graph.roomList/rooms/$count": {
      "get": {
        "tags": [
          "places.room"
        ],
        "summary": "placeAsRoomList.room_GetCount",
        "description": "",
        "operationId": "placeAsRoomList.room_GetCount",
        "parameters": [
          {
            "name": "place-id",
            "in": "path",
            "description": "The unique identifier of place",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user_GetCalendar",
        "description": "The user's primary calendar. Read-only.",
        "operationId": "user_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user_UpdateCalendar",
        "description": "",
        "operationId": "user_UpdateCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarPermissions": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_ListCalendarPermission",
        "description": "Get a collection of calendarPermission resources that describe the identity and roles of users with whom the specified calendar has been shared or delegated. Here, the calendar can be a user calendar or group calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendar-list-calendarpermissions?view=graph-rest-1.0"
        },
        "operationId": "user.calendar_ListCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionofcalendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_CreateCalendarPermission",
        "description": "",
        "operationId": "user.calendar_CreateCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarPermissions/{calendarPermission-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_GetCalendarPermission",
        "description": "Get the specified permissions object of a user or group calendar that has been shared.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendarpermission-get?view=graph-rest-1.0"
        },
        "operationId": "user.calendar_GetCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_UpdateCalendarPermission",
        "description": "Update the permissions assigned to an existing share recipient or delegate, through the corresponding <b>calendarPermission</b> object for a calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendarpermission-update?view=graph-rest-1.0"
        },
        "operationId": "user.calendar_UpdateCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_DeleteCalendarPermission",
        "description": "Delete calendarPermission.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendarpermission-delete?view=graph-rest-1.0"
        },
        "operationId": "user.calendar_DeleteCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarPermissions/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarPermission_GetCount",
        "description": "",
        "operationId": "user.calendar.calendarPermission_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_ListCalendarView",
        "description": "The calendar view for the calendar. Navigation property. Read-only.",
        "operationId": "user.calendar_ListCalendarView",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_GetCalendarView",
        "description": "The calendar view for the calendar. Navigation property. Read-only.",
        "operationId": "user.calendar_GetCalendarView",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/attachments": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.calendarView_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_CreateAttachment",
        "description": "",
        "operationId": "user.calendar.calendarView_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.calendarView_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_DeleteAttachment",
        "description": "",
        "operationId": "user.calendar.calendarView_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.attachment_GetCount",
        "description": "",
        "operationId": "user.calendar.calendarView.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/calendar": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.calendar.calendarView_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/extensions": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendar.calendarView_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_CreateExtension",
        "description": "",
        "operationId": "user.calendar.calendarView_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendar.calendarView_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_UpdateExtension",
        "description": "",
        "operationId": "user.calendar.calendarView_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_DeleteExtension",
        "description": "",
        "operationId": "user.calendar.calendarView_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.extension_GetCount",
        "description": "",
        "operationId": "user.calendar.calendarView.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.calendarView_ListInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.calendarView_GetInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.calendarView.instance_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_CreateAttachment",
        "description": "",
        "operationId": "user.calendar.calendarView.instance_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.calendarView.instance_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_DeleteAttachment",
        "description": "",
        "operationId": "user.calendar.calendarView.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance.attachment_GetCount",
        "description": "",
        "operationId": "user.calendar.calendarView.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.calendar.calendarView.instance_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendar.calendarView.instance_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_CreateExtension",
        "description": "",
        "operationId": "user.calendar.calendarView.instance_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendar.calendarView.instance_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_UpdateExtension",
        "description": "",
        "operationId": "user.calendar.calendarView.instance_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_DeleteExtension",
        "description": "",
        "operationId": "user.calendar.calendarView.instance_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance.extension_GetCount",
        "description": "",
        "operationId": "user.calendar.calendarView.instance.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView.instance_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView.instance_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView.instance_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView.instance_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView.instance_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_permanentDelete",
        "description": "",
        "operationId": "user.calendar.calendarView.instance_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView.instance_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_GetCount",
        "description": "",
        "operationId": "user.calendar.calendarView.instance_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView.instance_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_permanentDelete",
        "description": "",
        "operationId": "user.calendar.calendarView_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarCalendarViewMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_GetCount",
        "description": "",
        "operationId": "user.calendar.calendarView_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/calendarView/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.calendarView_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_ListEvent",
        "description": "The events in the calendar. Navigation property. Read-only.",
        "operationId": "user.calendar_ListEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_CreateEvent",
        "description": "",
        "operationId": "user.calendar_CreateEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_GetEvent",
        "description": "The events in the calendar. Navigation property. Read-only.",
        "operationId": "user.calendar_GetEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_UpdateEvent",
        "description": "",
        "operationId": "user.calendar_UpdateEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_DeleteEvent",
        "description": "",
        "operationId": "user.calendar_DeleteEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/attachments": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.event_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_CreateAttachment",
        "description": "",
        "operationId": "user.calendar.event_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.event_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_DeleteAttachment",
        "description": "",
        "operationId": "user.calendar.event_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.attachment_GetCount",
        "description": "",
        "operationId": "user.calendar.event.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/calendar": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.calendar.event_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/extensions": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendar.event_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_CreateExtension",
        "description": "",
        "operationId": "user.calendar.event_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendar.event_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_UpdateExtension",
        "description": "",
        "operationId": "user.calendar.event_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_DeleteExtension",
        "description": "",
        "operationId": "user.calendar.event_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.extension_GetCount",
        "description": "",
        "operationId": "user.calendar.event.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.event_ListInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.event_GetInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.event.instance_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_CreateAttachment",
        "description": "",
        "operationId": "user.calendar.event.instance_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendar.event.instance_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_DeleteAttachment",
        "description": "",
        "operationId": "user.calendar.event.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance.attachment_GetCount",
        "description": "",
        "operationId": "user.calendar.event.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.calendar.event.instance_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendar.event.instance_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_CreateExtension",
        "description": "",
        "operationId": "user.calendar.event.instance_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendar.event.instance_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_UpdateExtension",
        "description": "",
        "operationId": "user.calendar.event.instance_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_DeleteExtension",
        "description": "",
        "operationId": "user.calendar.event.instance_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance.extension_GetCount",
        "description": "",
        "operationId": "user.calendar.event.instance.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event.instance_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event.instance_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event.instance_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event.instance_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event.instance_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_permanentDelete",
        "description": "",
        "operationId": "user.calendar.event.instance_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event.instance_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_GetCount",
        "description": "",
        "operationId": "user.calendar.event.instance_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event.instance_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_permanentDelete",
        "description": "",
        "operationId": "user.calendar.event_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarEventsMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_GetCount",
        "description": "",
        "operationId": "user.calendar.event_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/events/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.calendar.event_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/microsoft.graph.allowedCalendarSharingRoles(User='{User}')": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_allowedCalendarSharingRole",
        "description": "",
        "operationId": "user.calendar_allowedCalendarSharingRole",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User",
            "in": "path",
            "description": "Usage: User='{User}'",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersCalendarMicrosoftGraphAllowedCalendarSharingRolesUserAPIResponse"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/microsoft.graph.getSchedule": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_getSchedule",
        "description": "Get the free/busy availability information for a collection of users, distributions lists, or resources (rooms or equipment) for a specified time period.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendar-getschedule?view=graph-rest-1.0"
        },
        "operationId": "user.calendar_getSchedule",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarMicrosoftGraphGetScheduleRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersCalendarMicrosoftGraphGetScheduleResponse"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendar/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_permanentDelete",
        "description": "Permanently delete a calendar folder and the events that it contains and remove them from the mailbox. For more information about item retention, see Configure deleted item retention and recoverable items quotas.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendar-permanentdelete?view=graph-rest-1.0"
        },
        "operationId": "user.calendar_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user_ListCalendar",
        "description": "The user's calendars. Read-only. Nullable.",
        "operationId": "user_ListCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofcalendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user_CreateCalendar",
        "description": "",
        "operationId": "user_CreateCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user_GetCalendar",
        "description": "The user's calendars. Read-only. Nullable.",
        "operationId": "Getuser_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user_UpdateCalendar",
        "description": "",
        "operationId": "Patchuser_UpdateCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user_DeleteCalendar",
        "description": "",
        "operationId": "user_DeleteCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarPermissions": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_ListCalendarPermission",
        "description": "The permissions of the users with whom the calendar is shared.",
        "operationId": "Getuser.calendar_ListCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionofcalendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_CreateCalendarPermission",
        "description": "",
        "operationId": "Postuser.calendar_CreateCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarPermissions/{calendarPermission-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_GetCalendarPermission",
        "description": "The permissions of the users with whom the calendar is shared.",
        "operationId": "Getuser.calendar_GetCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_UpdateCalendarPermission",
        "description": "",
        "operationId": "Patchuser.calendar_UpdateCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_DeleteCalendarPermission",
        "description": "",
        "operationId": "Deleteuser.calendar_DeleteCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarPermissions/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarPermission_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.calendarPermission_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_ListCalendarView",
        "description": "The calendar view for the calendar. Navigation property. Read-only.",
        "operationId": "Getuser.calendar_ListCalendarView",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_GetCalendarView",
        "description": "The calendar view for the calendar. Navigation property. Read-only.",
        "operationId": "Getuser.calendar_GetCalendarView",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/attachments": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.calendarView_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_CreateAttachment",
        "description": "",
        "operationId": "Postuser.calendar.calendarView_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.calendarView_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_DeleteAttachment",
        "description": "",
        "operationId": "Deleteuser.calendar.calendarView_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.attachment_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.calendarView.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/calendar": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "Getuser.calendar.calendarView_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/extensions": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "Getuser.calendar.calendarView_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_CreateExtension",
        "description": "",
        "operationId": "Postuser.calendar.calendarView_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "Getuser.calendar.calendarView_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_UpdateExtension",
        "description": "",
        "operationId": "Patchuser.calendar.calendarView_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_DeleteExtension",
        "description": "",
        "operationId": "Deleteuser.calendar.calendarView_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.extension_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.calendarView.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.calendarView_ListInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.calendarView_GetInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.calendarView.instance_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_CreateAttachment",
        "description": "",
        "operationId": "Postuser.calendar.calendarView.instance_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.calendarView.instance_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_DeleteAttachment",
        "description": "",
        "operationId": "Deleteuser.calendar.calendarView.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance.attachment_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.calendarView.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "Getuser.calendar.calendarView.instance_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "Getuser.calendar.calendarView.instance_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_CreateExtension",
        "description": "",
        "operationId": "Postuser.calendar.calendarView.instance_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "Getuser.calendar.calendarView.instance_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_UpdateExtension",
        "description": "",
        "operationId": "Patchuser.calendar.calendarView.instance_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_DeleteExtension",
        "description": "",
        "operationId": "Deleteuser.calendar.calendarView.instance_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance.extension_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.calendarView.instance.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView.instance_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView.instance_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView.instance_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView.instance_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView.instance_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_permanentDelete",
        "description": "",
        "operationId": "Postuser.calendar.calendarView.instance_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView.instance_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.calendarView.instance_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "Getuser.calendar.calendarView.instance_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_permanentDelete",
        "description": "",
        "operationId": "Postuser.calendar.calendarView_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.calendarView_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsCalendarViewEventIdMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.calendarView_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/calendarView/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.calendarView_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "Getuser.calendar.calendarView_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_ListEvent",
        "description": "The events in the calendar. Navigation property. Read-only.",
        "operationId": "Getuser.calendar_ListEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_CreateEvent",
        "description": "",
        "operationId": "Postuser.calendar_CreateEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_GetEvent",
        "description": "The events in the calendar. Navigation property. Read-only.",
        "operationId": "Getuser.calendar_GetEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_UpdateEvent",
        "description": "",
        "operationId": "Patchuser.calendar_UpdateEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_DeleteEvent",
        "description": "",
        "operationId": "Deleteuser.calendar_DeleteEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/attachments": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.event_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_CreateAttachment",
        "description": "",
        "operationId": "Postuser.calendar.event_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.event_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_DeleteAttachment",
        "description": "",
        "operationId": "Deleteuser.calendar.event_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.attachment_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.event.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/calendar": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "Getuser.calendar.event_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/extensions": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "Getuser.calendar.event_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_CreateExtension",
        "description": "",
        "operationId": "Postuser.calendar.event_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "Getuser.calendar.event_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_UpdateExtension",
        "description": "",
        "operationId": "Patchuser.calendar.event_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_DeleteExtension",
        "description": "",
        "operationId": "Deleteuser.calendar.event_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.extension_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.event.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.event_ListInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.event_GetInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.event.instance_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_CreateAttachment",
        "description": "",
        "operationId": "Postuser.calendar.event.instance_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "Getuser.calendar.event.instance_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_DeleteAttachment",
        "description": "",
        "operationId": "Deleteuser.calendar.event.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance.attachment_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.event.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "Getuser.calendar.event.instance_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "Getuser.calendar.event.instance_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_CreateExtension",
        "description": "",
        "operationId": "Postuser.calendar.event.instance_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "Getuser.calendar.event.instance_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_UpdateExtension",
        "description": "",
        "operationId": "Patchuser.calendar.event.instance_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_DeleteExtension",
        "description": "",
        "operationId": "Deleteuser.calendar.event.instance_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance.extension_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.event.instance.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event.instance_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event.instance_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event.instance_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event.instance_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event.instance_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_permanentDelete",
        "description": "",
        "operationId": "Postuser.calendar.event.instance_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event.instance_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.event.instance_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "Getuser.calendar.event.instance_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_permanentDelete",
        "description": "",
        "operationId": "Postuser.calendar.event_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar.event_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsEventsEventIdMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_GetCount",
        "description": "",
        "operationId": "Getuser.calendar.event_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/events/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar.event_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "Getuser.calendar.event_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/microsoft.graph.allowedCalendarSharingRoles(User='{User}')": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_allowedCalendarSharingRole",
        "description": "",
        "operationId": "Getuser.calendar_allowedCalendarSharingRole",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User",
            "in": "path",
            "description": "Usage: User='{User}'",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersCalendarsMicrosoftGraphAllowedCalendarSharingRolesUserUserAPIResponse"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/microsoft.graph.getSchedule": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_getSchedule",
        "description": "Get the free/busy availability information for a collection of users, distributions lists, or resources (rooms or equipment) for a specified time period.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendar-getschedule?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar_getSchedule",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarsMicrosoftGraphGetScheduleRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersCalendarsMicrosoftGraphGetScheduleResponse"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/{calendar-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_permanentDelete",
        "description": "Permanently delete a calendar folder and the events that it contains and remove them from the mailbox. For more information about item retention, see Configure deleted item retention and recoverable items quotas.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendar-permanentdelete?view=graph-rest-1.0"
        },
        "operationId": "Postuser.calendar_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendars/$count": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "user.calendar_GetCount",
        "description": "",
        "operationId": "user.calendar_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user_ListCalendarGroup",
        "description": "The user's calendar groups. Read-only. Nullable.",
        "operationId": "user_ListCalendarGroup",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionofcalendarGroup"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user_CreateCalendarGroup",
        "description": "",
        "operationId": "user_CreateCalendarGroup",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user_GetCalendarGroup",
        "description": "The user's calendar groups. Read-only. Nullable.",
        "operationId": "user_GetCalendarGroup",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user_UpdateCalendarGroup",
        "description": "",
        "operationId": "user_UpdateCalendarGroup",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user_DeleteCalendarGroup",
        "description": "",
        "operationId": "user_DeleteCalendarGroup",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup_ListCalendar",
        "description": "The calendars in the calendar group. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup_ListCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofcalendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup_CreateCalendar",
        "description": "",
        "operationId": "user.calendarGroup_CreateCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup_GetCalendar",
        "description": "The calendars in the calendar group. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup_UpdateCalendar",
        "description": "",
        "operationId": "user.calendarGroup_UpdateCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup_DeleteCalendar",
        "description": "",
        "operationId": "user.calendarGroup_DeleteCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarPermissions": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_ListCalendarPermission",
        "description": "The permissions of the users with whom the calendar is shared.",
        "operationId": "user.calendarGroup.calendar_ListCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionofcalendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_CreateCalendarPermission",
        "description": "",
        "operationId": "user.calendarGroup.calendar_CreateCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarPermissions/{calendarPermission-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_GetCalendarPermission",
        "description": "The permissions of the users with whom the calendar is shared.",
        "operationId": "user.calendarGroup.calendar_GetCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_UpdateCalendarPermission",
        "description": "",
        "operationId": "user.calendarGroup.calendar_UpdateCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_DeleteCalendarPermission",
        "description": "",
        "operationId": "user.calendarGroup.calendar_DeleteCalendarPermission",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarPermission-id",
            "in": "path",
            "description": "The unique identifier of calendarPermission",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarPermissions/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarPermission_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarPermission_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_ListCalendarView",
        "description": "The calendar view for the calendar. Navigation property. Read-only.",
        "operationId": "user.calendarGroup.calendar_ListCalendarView",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_GetCalendarView",
        "description": "The calendar view for the calendar. Navigation property. Read-only.",
        "operationId": "user.calendarGroup.calendar_GetCalendarView",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/attachments": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.calendarView_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_CreateAttachment",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.calendarView_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_DeleteAttachment",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.attachment_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/calendar": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.calendarGroup.calendar.calendarView_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/extensions": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarGroup.calendar.calendarView_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_CreateExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarGroup.calendar.calendarView_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_UpdateExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_DeleteExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.extension_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.calendarView_ListInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.calendarView_GetInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_CreateAttachment",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_DeleteAttachment",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance.attachment_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_CreateExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_UpdateExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_DeleteExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance.extension_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView.instance.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView.instance_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView.instance_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView.instance_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView.instance_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView.instance_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_permanentDelete",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView.instance_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView.instance_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView.instance_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_permanentDelete",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.calendarView_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.calendarView_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.calendarView_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_ListEvent",
        "description": "The events in the calendar. Navigation property. Read-only.",
        "operationId": "user.calendarGroup.calendar_ListEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_CreateEvent",
        "description": "",
        "operationId": "user.calendarGroup.calendar_CreateEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_GetEvent",
        "description": "The events in the calendar. Navigation property. Read-only.",
        "operationId": "user.calendarGroup.calendar_GetEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_UpdateEvent",
        "description": "",
        "operationId": "user.calendarGroup.calendar_UpdateEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_DeleteEvent",
        "description": "",
        "operationId": "user.calendarGroup.calendar_DeleteEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/attachments": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.event_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_CreateAttachment",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.event_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_DeleteAttachment",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.attachment_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/calendar": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.calendarGroup.calendar.event_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/extensions": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarGroup.calendar.event_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_CreateExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarGroup.calendar.event_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_UpdateExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_DeleteExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.extension_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.event_ListInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.event_GetInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.event.instance_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_CreateAttachment",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event.instance_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarGroup.calendar.event.instance_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_DeleteAttachment",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance.attachment_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.calendarGroup.calendar.event.instance_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarGroup.calendar.event.instance_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_CreateExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event.instance_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarGroup.calendar.event.instance_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_UpdateExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event.instance_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_DeleteExtension",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event.instance_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance.extension_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event.instance.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event.instance_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event.instance_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event.instance_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event.instance_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event.instance_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_permanentDelete",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event.instance_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event.instance_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event.instance_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event.instance_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_permanentDelete",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar.event_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/events/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar.event_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar.event_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/microsoft.graph.allowedCalendarSharingRoles(User='{User}')": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_allowedCalendarSharingRole",
        "description": "",
        "operationId": "user.calendarGroup.calendar_allowedCalendarSharingRole",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User",
            "in": "path",
            "description": "Usage: User='{User}'",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdMicrosoftGraphAllowedCalendarSharingRolesUserUserAPIResponse"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/microsoft.graph.getSchedule": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_getSchedule",
        "description": "Get the free/busy availability information for a collection of users, distributions lists, or resources (rooms or equipment) for a specified time period.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendar-getschedule?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar_getSchedule",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdMicrosoftGraphGetScheduleRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersCalendarGroupsCalendarsCalendarIdMicrosoftGraphGetScheduleResponse"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_permanentDelete",
        "description": "Permanently delete a calendar folder and the events that it contains and remove them from the mailbox. For more information about item retention, see Configure deleted item retention and recoverable items quotas.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/calendar-permanentdelete?view=graph-rest-1.0"
        },
        "operationId": "user.calendarGroup.calendar_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "The unique identifier of calendar",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}/calendars/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup.calendar_GetCount",
        "description": "",
        "operationId": "user.calendarGroup.calendar_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "The unique identifier of calendarGroup",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarGroups/$count": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "user.calendarGroup_GetCount",
        "description": "",
        "operationId": "user.calendarGroup_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user_ListCalendarView",
        "description": "The calendar view for the calendar. Read-only. Nullable.",
        "operationId": "user_ListCalendarView",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user_GetCalendarView",
        "description": "The calendar view for the calendar. Read-only. Nullable.",
        "operationId": "user_GetCalendarView",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/attachments": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarView_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_CreateAttachment",
        "description": "",
        "operationId": "user.calendarView_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarView_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_DeleteAttachment",
        "description": "",
        "operationId": "user.calendarView_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.attachment_GetCount",
        "description": "",
        "operationId": "user.calendarView.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/calendar": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.calendarView_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/extensions": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarView_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_CreateExtension",
        "description": "",
        "operationId": "user.calendarView_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarView_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_UpdateExtension",
        "description": "",
        "operationId": "user.calendarView_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_DeleteExtension",
        "description": "",
        "operationId": "user.calendarView_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.extension_GetCount",
        "description": "",
        "operationId": "user.calendarView.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarView_ListInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarView_GetInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarView.instance_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_CreateAttachment",
        "description": "",
        "operationId": "user.calendarView.instance_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.calendarView.instance_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_DeleteAttachment",
        "description": "",
        "operationId": "user.calendarView.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance.attachment_GetCount",
        "description": "",
        "operationId": "user.calendarView.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.calendarView.instance_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarView.instance_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_CreateExtension",
        "description": "",
        "operationId": "user.calendarView.instance_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.calendarView.instance_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_UpdateExtension",
        "description": "",
        "operationId": "user.calendarView.instance_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_DeleteExtension",
        "description": "",
        "operationId": "user.calendarView.instance_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance.extension_GetCount",
        "description": "",
        "operationId": "user.calendarView.instance.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView.instance_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView.instance_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView.instance_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView.instance_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView.instance_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_permanentDelete",
        "description": "",
        "operationId": "user.calendarView.instance_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView.instance_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_GetCount",
        "description": "",
        "operationId": "user.calendarView.instance_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView.instance_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_permanentDelete",
        "description": "",
        "operationId": "user.calendarView_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersCalendarViewMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_GetCount",
        "description": "",
        "operationId": "user.calendarView_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/calendarView/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.calendarView_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.calendarView_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user_ListEvent",
        "description": "The user's events. Default is to show Events under the Default Calendar. Read-only. Nullable.",
        "operationId": "user_ListEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user_CreateEvent",
        "description": "",
        "operationId": "user_CreateEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user_GetEvent",
        "description": "The user's events. Default is to show Events under the Default Calendar. Read-only. Nullable.",
        "operationId": "user_GetEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.event"
        ],
        "summary": "user_UpdateEvent",
        "description": "",
        "operationId": "user_UpdateEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.event"
        ],
        "summary": "user_DeleteEvent",
        "description": "",
        "operationId": "user_DeleteEvent",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/attachments": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.event_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_CreateAttachment",
        "description": "",
        "operationId": "user.event_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.event_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_DeleteAttachment",
        "description": "",
        "operationId": "user.event_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/attachments/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.attachment_GetCount",
        "description": "",
        "operationId": "user.event.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.event.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/calendar": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.event_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/extensions": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.event_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_CreateExtension",
        "description": "",
        "operationId": "user.event_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.event_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_UpdateExtension",
        "description": "",
        "operationId": "user.event_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_DeleteExtension",
        "description": "",
        "operationId": "user.event_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/extensions/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.extension_GetCount",
        "description": "",
        "operationId": "user.event.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_ListInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.event_ListInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_GetInstance",
        "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable.",
        "operationId": "user.event_GetInstance",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/attachments": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_ListAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.event.instance_ListAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofattachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_CreateAttachment",
        "description": "",
        "operationId": "user.event.instance_CreateAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/attachments/{attachment-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_GetAttachment",
        "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
        "operationId": "user.event.instance_GetAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_DeleteAttachment",
        "description": "",
        "operationId": "user.event.instance_DeleteAttachment",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment-id",
            "in": "path",
            "description": "The unique identifier of attachment",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/attachments/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance.attachment_GetCount",
        "description": "",
        "operationId": "user.event.instance.attachment_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/attachments/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance.attachment_createUploadSession",
        "description": "Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to the specified Outlook item. The item can be a message or event. Use this approach to attach a file if the file size is between 3 MB and 150 MB. To attach a file that's smaller than 3 MB, do a POST operation on the attachments navigation property of the Outlook item; see how to do this for a message or for an event. As part of the response, this action returns an upload URL that you can use in subsequent sequential PUT queries. Request headers for each PUT operation let you specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload. The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/attachment-createuploadsession?view=graph-rest-1.0"
        },
        "operationId": "user.event.instance.attachment_createUploadSession",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSession"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/calendar": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_GetCalendar",
        "description": "The calendar that contains the event. Navigation property. Read-only.",
        "operationId": "user.event.instance_GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/extensions": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_ListExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.event.instance_ListExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved collection",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofextension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_CreateExtension",
        "description": "",
        "operationId": "user.event.instance_CreateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Created navigation property.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_GetExtension",
        "description": "The collection of open extensions defined for the event. Nullable.",
        "operationId": "user.event.instance_GetExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Retrieved navigation property",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_UpdateExtension",
        "description": "",
        "operationId": "user.event.instance_UpdateExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New navigation property values",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.extension"
                  },
                  {
                    "description": "New navigation property values"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_DeleteExtension",
        "description": "",
        "operationId": "user.event.instance_DeleteExtension",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "The unique identifier of extension",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/extensions/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance.extension_GetCount",
        "description": "",
        "operationId": "user.event.instance.extension_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.event.instance_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsInstancesEventId1MicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.event.instance_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsInstancesEventId1MicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.event.instance_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsInstancesEventId1MicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.event.instance_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.event.instance_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsInstancesEventId1MicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_permanentDelete",
        "description": "",
        "operationId": "user.event.instance_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.event.instance_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/{event-id1}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.event.instance_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id1",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_GetCount",
        "description": "",
        "operationId": "user.event.instance_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/instances/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event.instance_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.event.instance_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/microsoft.graph.accept": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_accept",
        "description": "Accept the specified event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-accept?view=graph-rest-1.0"
        },
        "operationId": "user.event_accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsMicrosoftGraphAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/microsoft.graph.cancel": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_cancel",
        "description": "This action allows the organizer of a meeting to send a cancellation message and cancel the event.  The action moves the event to the Deleted Items folder. The organizer can also cancel an occurrence of a recurring meeting \nby providing the occurrence event ID. An attendee calling this action gets an error (HTTP 400 Bad Request), with the following\nerror message: 'Your request can't be completed. You need to be an organizer to cancel a meeting.' This action differs from Delete in that Cancel is available to only the organizer, and lets\nthe organizer send a custom message to the attendees about the cancellation.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-cancel?view=graph-rest-1.0"
        },
        "operationId": "user.event_cancel",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsMicrosoftGraphCancelRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/microsoft.graph.decline": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_decline",
        "description": "Decline invitation to the specified event in a user calendar. If the event allows proposals for new times, on declining the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-decline?view=graph-rest-1.0"
        },
        "operationId": "user.event_decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsMicrosoftGraphDeclineRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/microsoft.graph.dismissReminder": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_dismissReminder",
        "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-dismissreminder?view=graph-rest-1.0"
        },
        "operationId": "user.event_dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/microsoft.graph.forward": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_forward",
        "description": "This action allows the organizer or attendee of a meeting event to forward the\nmeeting request to a new recipient. If the meeting event is forwarded from an attendee's Microsoft 365 mailbox to another recipient, this action\nalso sends a message to notify the organizer of the forwarding, and adds the recipient to the organizer's\ncopy of the meeting event. This convenience is not available when forwarding from an Outlook.com account.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-forward?view=graph-rest-1.0"
        },
        "operationId": "user.event_forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsMicrosoftGraphForwardRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/microsoft.graph.permanentDelete": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_permanentDelete",
        "description": "",
        "operationId": "user.event_permanentDelete",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/microsoft.graph.snoozeReminder": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_snoozeReminder",
        "description": "Postpone a reminder for an event in a user calendar until a new time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-snoozereminder?view=graph-rest-1.0"
        },
        "operationId": "user.event_snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsMicrosoftGraphSnoozeReminderRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/{event-id}/microsoft.graph.tentativelyAccept": {
      "post": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_tentativelyAccept",
        "description": "Tentatively accept the specified event in a user calendar. If the event allows proposals for new times, on responding tentative to the event, an invitee can choose to suggest an alternative time by including the proposedNewTime parameter. For more information on how to propose a time, and how to receive and accept a new time proposal, see Propose new meeting times.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-tentativelyaccept?view=graph-rest-1.0"
        },
        "operationId": "user.event_tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "The unique identifier of event",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UsersEventsMicrosoftGraphTentativelyAcceptRequest"
                  },
                  {
                    "description": "Action parameters"
                  }
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/$count": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_GetCount",
        "description": "",
        "operationId": "user.event_GetCount",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "The count of the resource",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "contentEncoding": "int32",
                  "contentMediaType": "text/plain"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/users/{user-id}/events/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "user.event_delta",
        "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendarView, without having to fetch all the events of that calendar from the server every time.",
        "externalDocs": {
          "description": "Find more info here",
          "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-1.0"
        },
        "operationId": "user.event_delta",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The unique identifier of user",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32",
              "examples": [
                50
              ]
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0.0,
              "type": "integer",
              "contentEncoding": "int32"
            }
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Include count of items",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "2XX": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collectionofevent1"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "microsoft.graph.calendar": {
        "title": "microsoft.graph.calendar",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          },
          "allowedOnlineMeetingProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/onlineMeetingProviderType"
            },
            "description": "Represent the online meeting service providers that can be used to create online meetings in this calendar. Possible values are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness."
          },
          "canEdit": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "true if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who shared a calendar and granted write access."
          },
          "canShare": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "true if the user has permission to share the calendar, false otherwise. Only the user who created the calendar can share it."
          },
          "canViewPrivateItems": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "If true, the user can read calendar items that have been marked private, false otherwise."
          },
          "changeKey": {
            "type": [
              "string",
              "null"
            ],
            "description": "Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only."
          },
          "color": {
            "allOf": [
              {
                "$ref": "#/components/schemas/calendarColor"
              },
              {}
            ]
          },
          "defaultOnlineMeetingProvider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/onlineMeetingProviderType"
              },
              {}
            ]
          },
          "hexColor": {
            "type": [
              "string",
              "null"
            ],
            "description": "The calendar color, expressed in a hex color code of three hexadecimal values, each ranging from 00 to FF and representing the red, green, or blue components of the color in the RGB color space. If the user has never explicitly set a color for the calendar, this property is empty. Read-only."
          },
          "isDefaultCalendar": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "true if this is the default calendar where new events are created by default, false otherwise."
          },
          "isRemovable": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Indicates whether this user calendar can be deleted from the user mailbox."
          },
          "isTallyingResponses": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Indicates whether this user calendar supports tracking of meeting responses. Only meeting invites sent from users' primary calendars support tracking of meeting responses."
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "description": "The calendar name."
          },
          "owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/emailAddress"
              },
              {}
            ]
          },
          "calendarPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
            },
            "description": "The permissions of the users with whom the calendar is shared."
          },
          "calendarView": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.event"
            },
            "description": "The calendar view for the calendar. Navigation property. Read-only."
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.event"
            },
            "description": "The events in the calendar. Navigation property. Read-only."
          },
          "multiValueExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
            },
            "description": "The collection of multi-value extended properties defined for the calendar. Read-only. Nullable."
          },
          "singleValueExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
            },
            "description": "The collection of single-value extended properties defined for the calendar. Read-only. Nullable."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.calendarPermission": {
        "title": "microsoft.graph.calendarPermission",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          },
          "allowedRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/calendarRoleType"
            },
            "description": "List of allowed sharing or delegating permission levels for the calendar. Possible values are: none, freeBusyRead, limitedRead, read, write, delegateWithoutPrivateEventAccess, delegateWithPrivateEventAccess, custom."
          },
          "emailAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/emailAddress"
              },
              {}
            ]
          },
          "isInsideOrganization": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "True if the user in context (recipient or delegate) is inside the same organization as the calendar owner."
          },
          "isRemovable": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "True if the user can be removed from the list of recipients or delegates for the specified calendar, false otherwise. The 'My organization' user determines the permissions other people within your organization have to the given calendar. You can't remove 'My organization' as a share recipient to a calendar."
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/calendarRoleType"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.event": {
        "title": "microsoft.graph.event",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          },
          "categories": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ]
            },
            "description": "The categories associated with the item"
          },
          "changeKey": {
            "type": [
              "string",
              "null"
            ],
            "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only."
          },
          "createdDateTime": {
            "type": [
              "string",
              "null"
            ],
            "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
            "contentEncoding": "date-time"
          },
          "lastModifiedDateTime": {
            "type": [
              "string",
              "null"
            ],
            "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
            "contentEncoding": "date-time"
          },
          "allowNewTimeProposals": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. The default is true."
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.attendee"
            },
            "description": "The collection of attendees for the event."
          },
          "body": {
            "allOf": [
              {
                "$ref": "#/components/schemas/itemBody"
              },
              {}
            ]
          },
          "bodyPreview": {
            "type": [
              "string",
              "null"
            ],
            "description": "The preview of the message associated with the event. It's in text format."
          },
          "end": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "hasAttachments": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Set to true if the event has attachments."
          },
          "hideAttendees": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. The default is false."
          },
          "iCalUId": {
            "type": [
              "string",
              "null"
            ],
            "description": "A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only."
          },
          "importance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/importance"
              },
              {}
            ]
          },
          "isAllDay": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Set to true if the event lasts all day. If true, regardless of whether it's a single-day or multi-day event, start, and endtime must be set to midnight and be in the same time zone."
          },
          "isCancelled": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Set to true if the event has been canceled."
          },
          "isDraft": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Set to true if the user has updated the meeting in Outlook but hasn't sent the updates to attendees. Set to false if all changes are sent, or if the event is an appointment without any attendees."
          },
          "isOnlineMeeting": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "True if this event has online meeting information (that is, onlineMeeting points to an onlineMeetingInfo resource), false otherwise. Default is false (onlineMeeting is null). Optional.  After you set isOnlineMeeting to true, Microsoft Graph initializes onlineMeeting. Subsequently, Outlook ignores any further changes to isOnlineMeeting, and the meeting remains available online."
          },
          "isOrganizer": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Set to true if the calendar owner (specified by the owner property of the calendar) is the organizer of the event (specified by the organizer property of the event). It also applies if a delegate organized the event on behalf of the owner."
          },
          "isReminderOn": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Set to true if an alert is set to remind the user of the event."
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/location"
              },
              {}
            ]
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/location"
            },
            "description": "The locations where the event is held or attended from. The location and locations properties always correspond with each other. If you update the location property, any prior locations in the locations collection are removed and replaced by the new location value."
          },
          "onlineMeeting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/onlineMeetingInfo"
              },
              {}
            ]
          },
          "onlineMeetingProvider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/onlineMeetingProviderType"
              },
              {}
            ]
          },
          "onlineMeetingUrl": {
            "type": [
              "string",
              "null"
            ],
            "description": "A URL for an online meeting. The property is set only when an organizer specifies in Outlook that an event is an online meeting such as Skype. Read-only.To access the URL to join an online meeting, use joinUrl which is exposed via the onlineMeeting property of the event. The onlineMeetingUrl property will be deprecated in the future."
          },
          "organizer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/recipient"
              },
              {}
            ]
          },
          "originalEndTimeZone": {
            "type": [
              "string",
              "null"
            ],
            "description": "The end time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook."
          },
          "originalStart": {
            "type": [
              "string",
              "null"
            ],
            "description": "Represents the start time of an event when it's initially created as an occurrence or exception in a recurring series. This property is not returned for events that are single instances. Its date and time information is expressed in ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
            "contentEncoding": "date-time"
          },
          "originalStartTimeZone": {
            "type": [
              "string",
              "null"
            ],
            "description": "The start time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook."
          },
          "recurrence": {
            "allOf": [
              {
                "$ref": "#/components/schemas/patternedRecurrence"
              },
              {}
            ]
          },
          "reminderMinutesBeforeStart": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": [
              "integer",
              "null"
            ],
            "description": "The number of minutes before the event start time that the reminder alert occurs.",
            "contentEncoding": "int32"
          },
          "responseRequested": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Default is true, which represents the organizer would like an invitee to send a response to the event."
          },
          "responseStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/responseStatus"
              },
              {}
            ]
          },
          "sensitivity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sensitivity"
              },
              {}
            ]
          },
          "seriesMasterId": {
            "type": [
              "string",
              "null"
            ],
            "description": "The ID for the recurring series master item, if this event is part of a recurring series."
          },
          "showAs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/freeBusyStatus"
              },
              {}
            ]
          },
          "start": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "subject": {
            "type": [
              "string",
              "null"
            ],
            "description": "The text of the event's subject line."
          },
          "transactionId": {
            "type": [
              "string",
              "null"
            ],
            "description": "A custom identifier specified by a client app for the server to avoid redundant POST operations in case of client retries to create the same event. It's useful when low network connectivity causes the client to time out before receiving a response from the server for the client's prior create-event request. After you set transactionId when creating an event, you can't change transactionId in a subsequent update. This property is only returned in a response payload if an app has set it. Optional."
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eventType"
              },
              {}
            ]
          },
          "webLink": {
            "type": [
              "string",
              "null"
            ],
            "description": "The URL to open the event in Outlook on the web.Outlook on the web opens the event in the browser if you are signed in to your mailbox. Otherwise, Outlook on the web prompts you to sign in.This URL can't be accessed from within an iFrame."
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.attachment"
            },
            "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable."
          },
          "calendar": {
            "allOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.calendar"
              },
              {}
            ]
          },
          "extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.extension"
            },
            "description": "The collection of open extensions defined for the event. Nullable."
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.event"
            },
            "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable."
          },
          "multiValueExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
            },
            "description": "The collection of multi-value extended properties defined for the event. Read-only. Nullable."
          },
          "singleValueExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
            },
            "description": "The collection of single-value extended properties defined for the event. Read-only. Nullable."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.attachment": {
        "title": "microsoft.graph.attachment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          },
          "contentType": {
            "type": [
              "string",
              "null"
            ],
            "description": "The MIME type."
          },
          "isInline": {
            "type": "boolean",
            "description": "true if the attachment is an inline attachment; otherwise, false."
          },
          "lastModifiedDateTime": {
            "type": [
              "string",
              "null"
            ],
            "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
            "contentEncoding": "date-time"
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "description": "The attachment's file name."
          },
          "size": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": "integer",
            "description": "The length of the attachment in bytes.",
            "contentEncoding": "int32"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "attachmentItem": {
        "title": "attachmentItem",
        "type": "object",
        "properties": {
          "attachmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentType"
              },
              {}
            ]
          },
          "contentId": {
            "type": [
              "string",
              "null"
            ],
            "description": "The CID or Content-Id of the attachment for referencing for the in-line attachments using the <img src='cid:contentId'> tag in HTML messages. Optional."
          },
          "contentType": {
            "type": [
              "string",
              "null"
            ],
            "description": "The nature of the data in the attachment. Optional."
          },
          "isInline": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "true if the attachment is an inline attachment; otherwise, false. Optional."
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "description": "The display name of the attachment. This can be a descriptive string and doesn't have to be the actual file name. Required."
          },
          "size": {
            "type": [
              "integer",
              "null"
            ],
            "description": "The length of the attachment in bytes. Required.",
            "contentEncoding": "int64"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "uploadSession": {
        "title": "uploadSession",
        "type": "object",
        "properties": {
          "expirationDateTime": {
            "type": [
              "string",
              "null"
            ],
            "description": "The date and time in UTC that the upload session will expire. The complete file must be uploaded before this expiration time is reached.",
            "contentEncoding": "date-time"
          },
          "nextExpectedRanges": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ]
            },
            "description": "A collection of byte ranges that the server is missing for the file. These ranges are zero indexed and of the format 'start-end' (for example '0-26' to indicate the first 27 bytes of the file). When uploading files as Outlook attachments, instead of a collection of ranges, this property always indicates a single value '{start}', the location in the file where the next upload should begin."
          },
          "uploadUrl": {
            "type": [
              "string",
              "null"
            ],
            "description": "The URL endpoint that accepts PUT requests for byte ranges of the file."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.extension": {
        "title": "microsoft.graph.extension",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "timeSlot": {
        "title": "timeSlot",
        "type": "object",
        "properties": {
          "end": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "start": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "recipient": {
        "title": "recipient",
        "type": "object",
        "properties": {
          "emailAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/emailAddress"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "dateTimeTimeZone": {
        "title": "dateTimeTimeZone",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
          },
          "timeZone": {
            "type": [
              "string",
              "null"
            ],
            "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "calendarRoleType": {
        "title": "calendarRoleType",
        "enum": [
          "none",
          "freeBusyRead",
          "limitedRead",
          "read",
          "write",
          "delegateWithoutPrivateEventAccess",
          "delegateWithPrivateEventAccess",
          "custom"
        ],
        "type": "string"
      },
      "scheduleInformation": {
        "title": "scheduleInformation",
        "type": "object",
        "properties": {
          "availabilityView": {
            "type": [
              "string",
              "null"
            ],
            "description": "Represents a merged view of availability of all the items in scheduleItems. The view consists of time slots. Availability during each time slot is indicated with: 0= free or working elswhere, 1= tentative, 2= busy, 3= out of office.Note: Working elsewhere is set to 0 instead of 4 for backward compatibility. For details, see the Q&A and Exchange 2007 and Exchange 2010 do not use the WorkingElsewhere value."
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/freeBusyError"
              },
              {}
            ]
          },
          "scheduleId": {
            "type": [
              "string",
              "null"
            ],
            "description": "An SMTP address of the user, distribution list, or resource, identifying an instance of scheduleInformation."
          },
          "scheduleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/scheduleItem"
            },
            "description": "Contains the items that describe the availability of the user or resource."
          },
          "workingHours": {
            "allOf": [
              {
                "$ref": "#/components/schemas/workingHours"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.place": {
        "title": "microsoft.graph.place",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/physicalAddress"
              },
              {}
            ]
          },
          "displayName": {
            "type": "string",
            "description": "The name associated with the place."
          },
          "geoCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/outlookGeoCoordinates"
              },
              {}
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ],
            "description": "The phone number of the place."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.room": {
        "title": "microsoft.graph.room",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/physicalAddress"
              },
              {}
            ]
          },
          "displayName": {
            "type": "string",
            "description": "The name associated with the place."
          },
          "geoCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/outlookGeoCoordinates"
              },
              {}
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ],
            "description": "The phone number of the place."
          },
          "audioDeviceName": {
            "type": [
              "string",
              "null"
            ],
            "description": "Specifies the name of the audio device in the room."
          },
          "bookingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/bookingType"
              },
              {}
            ]
          },
          "building": {
            "type": [
              "string",
              "null"
            ],
            "description": "Specifies the building name or building number that the room is in."
          },
          "capacity": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": [
              "integer",
              "null"
            ],
            "description": "Specifies the capacity of the room.",
            "contentEncoding": "int32"
          },
          "displayDeviceName": {
            "type": [
              "string",
              "null"
            ],
            "description": "Specifies the name of the display device in the room."
          },
          "emailAddress": {
            "type": [
              "string",
              "null"
            ],
            "description": "Email address of the room."
          },
          "floorLabel": {
            "type": [
              "string",
              "null"
            ],
            "description": "Specifies a descriptive label for the floor, for example, P."
          },
          "floorNumber": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": [
              "integer",
              "null"
            ],
            "description": "Specifies the floor number that the room is on.",
            "contentEncoding": "int32"
          },
          "isWheelChairAccessible": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Specifies whether the room is wheelchair accessible."
          },
          "label": {
            "type": [
              "string",
              "null"
            ],
            "description": "Specifies a descriptive label for the room, for example, a number or name."
          },
          "nickname": {
            "type": "string",
            "description": "Specifies a nickname for the room, for example, 'conf room'."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ]
            },
            "description": "Specifies other features of the room, for example, details like the type of view or furniture type."
          },
          "videoDeviceName": {
            "type": [
              "string",
              "null"
            ],
            "description": "Specifies the name of the video device in the room."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.roomList": {
        "title": "microsoft.graph.roomList",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/physicalAddress"
              },
              {}
            ]
          },
          "displayName": {
            "type": "string",
            "description": "The name associated with the place."
          },
          "geoCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/outlookGeoCoordinates"
              },
              {}
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ],
            "description": "The phone number of the place."
          },
          "emailAddress": {
            "type": [
              "string",
              "null"
            ],
            "description": "The email address of the room list."
          },
          "rooms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.room"
            },
            "description": ""
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.calendarGroup": {
        "title": "microsoft.graph.calendarGroup",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          },
          "changeKey": {
            "type": [
              "string",
              "null"
            ],
            "description": "Identifies the version of the calendar group. Every time the calendar group is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only."
          },
          "classId": {
            "type": [
              "string",
              "null"
            ],
            "description": "The class identifier. Read-only.",
            "contentEncoding": "uuid"
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "description": "The group name."
          },
          "calendars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.calendar"
            },
            "description": "The calendars in the calendar group. Navigation property. Read-only. Nullable."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "entity": {
        "title": "entity",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "onlineMeetingProviderType": {
        "title": "onlineMeetingProviderType",
        "enum": [
          "unknown",
          "skypeForBusiness",
          "skypeForConsumer",
          "teamsForBusiness"
        ],
        "type": "string"
      },
      "calendarColor": {
        "title": "calendarColor",
        "enum": [
          "auto",
          "lightBlue",
          "lightGreen",
          "lightOrange",
          "lightGray",
          "lightYellow",
          "lightTeal",
          "lightPink",
          "lightBrown",
          "lightRed",
          "maxColor"
        ],
        "type": "string"
      },
      "emailAddress": {
        "title": "emailAddress",
        "type": "object",
        "properties": {
          "address": {
            "type": [
              "string",
              "null"
            ],
            "description": "The email address of the person or entity."
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "description": "The display name of the person or entity."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.multiValueLegacyExtendedProperty": {
        "title": "microsoft.graph.multiValueLegacyExtendedProperty",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          },
          "value": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ]
            },
            "description": "A collection of property values."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.singleValueLegacyExtendedProperty": {
        "title": "microsoft.graph.singleValueLegacyExtendedProperty",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          },
          "value": {
            "type": [
              "string",
              "null"
            ],
            "description": "A property value."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.outlookItem": {
        "title": "microsoft.graph.outlookItem",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          },
          "categories": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ]
            },
            "description": "The categories associated with the item"
          },
          "changeKey": {
            "type": [
              "string",
              "null"
            ],
            "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only."
          },
          "createdDateTime": {
            "type": [
              "string",
              "null"
            ],
            "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
            "contentEncoding": "date-time"
          },
          "lastModifiedDateTime": {
            "type": [
              "string",
              "null"
            ],
            "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
            "contentEncoding": "date-time"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.attendee": {
        "title": "microsoft.graph.attendee",
        "type": "object",
        "properties": {
          "emailAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/emailAddress"
              },
              {}
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attendeeType"
              },
              {}
            ]
          },
          "proposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/responseStatus"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "itemBody": {
        "title": "itemBody",
        "type": "object",
        "properties": {
          "content": {
            "type": [
              "string",
              "null"
            ],
            "description": "The content of the item."
          },
          "contentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/bodyType"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "importance": {
        "title": "importance",
        "enum": [
          "low",
          "normal",
          "high"
        ],
        "type": "string"
      },
      "location": {
        "title": "location",
        "type": "object",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/physicalAddress"
              },
              {}
            ]
          },
          "coordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/outlookGeoCoordinates"
              },
              {}
            ]
          },
          "displayName": {
            "type": [
              "string",
              "null"
            ],
            "description": "The name associated with the location."
          },
          "locationEmailAddress": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional email address of the location."
          },
          "locationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/locationType"
              },
              {}
            ]
          },
          "locationUri": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional URI representing the location."
          },
          "uniqueId": {
            "type": [
              "string",
              "null"
            ],
            "description": "For internal use only."
          },
          "uniqueIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/locationUniqueIdType"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "onlineMeetingInfo": {
        "title": "onlineMeetingInfo",
        "type": "object",
        "properties": {
          "conferenceId": {
            "type": [
              "string",
              "null"
            ],
            "description": "The ID of the conference."
          },
          "joinUrl": {
            "type": [
              "string",
              "null"
            ],
            "description": "The external link that launches the online meeting. This is a URL that clients launch into a browser and will redirect the user to join the meeting."
          },
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/phone"
            },
            "description": "All of the phone numbers associated with this conference."
          },
          "quickDial": {
            "type": [
              "string",
              "null"
            ],
            "description": "The preformatted quick dial for this call."
          },
          "tollFreeNumbers": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ]
            },
            "description": "The toll free numbers that can be used to join the conference."
          },
          "tollNumber": {
            "type": [
              "string",
              "null"
            ],
            "description": "The toll number that can be used to join the conference."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "patternedRecurrence": {
        "title": "patternedRecurrence",
        "type": "object",
        "properties": {
          "pattern": {
            "allOf": [
              {
                "$ref": "#/components/schemas/recurrencePattern"
              },
              {}
            ]
          },
          "range": {
            "allOf": [
              {
                "$ref": "#/components/schemas/recurrenceRange"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "responseStatus": {
        "title": "responseStatus",
        "type": "object",
        "properties": {
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/responseType"
              },
              {}
            ]
          },
          "time": {
            "type": [
              "string",
              "null"
            ],
            "description": "The date and time when the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
            "contentEncoding": "date-time"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "sensitivity": {
        "title": "sensitivity",
        "enum": [
          "normal",
          "personal",
          "private",
          "confidential"
        ],
        "type": "string"
      },
      "freeBusyStatus": {
        "title": "freeBusyStatus",
        "enum": [
          "unknown",
          "free",
          "tentative",
          "busy",
          "oof",
          "workingElsewhere"
        ],
        "type": "string"
      },
      "eventType": {
        "title": "eventType",
        "enum": [
          "singleInstance",
          "occurrence",
          "exception",
          "seriesMaster"
        ],
        "type": "string"
      },
      "attachmentType": {
        "title": "attachmentType",
        "enum": [
          "file",
          "item",
          "reference"
        ],
        "type": "string"
      },
      "freeBusyError": {
        "title": "freeBusyError",
        "type": "object",
        "properties": {
          "message": {
            "type": [
              "string",
              "null"
            ],
            "description": "Describes the error."
          },
          "responseCode": {
            "type": [
              "string",
              "null"
            ],
            "description": "The response code from querying for the availability of the user, distribution list, or resource."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "scheduleItem": {
        "title": "scheduleItem",
        "type": "object",
        "properties": {
          "end": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "isPrivate": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "The sensitivity of the corresponding event. True if the event is marked private, false otherwise. Optional."
          },
          "location": {
            "type": [
              "string",
              "null"
            ],
            "description": "The location where the corresponding event is held or attended from. Optional."
          },
          "start": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/freeBusyStatus"
              },
              {}
            ]
          },
          "subject": {
            "type": [
              "string",
              "null"
            ],
            "description": "The corresponding event's subject line. Optional."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "workingHours": {
        "title": "workingHours",
        "type": "object",
        "properties": {
          "daysOfWeek": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dayOfWeek"
            },
            "description": "The days of the week on which the user works."
          },
          "endTime": {
            "type": [
              "string",
              "null"
            ],
            "description": "The time of the day that the user stops working.",
            "contentEncoding": "date-time"
          },
          "startTime": {
            "type": [
              "string",
              "null"
            ],
            "description": "The time of the day that the user starts working.",
            "contentEncoding": "date-time"
          },
          "timeZone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeZoneBase"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "physicalAddress": {
        "title": "physicalAddress",
        "type": "object",
        "properties": {
          "city": {
            "type": [
              "string",
              "null"
            ],
            "description": "The city."
          },
          "countryOrRegion": {
            "type": [
              "string",
              "null"
            ],
            "description": "The country or region. It's a free-format string value, for example, 'United States'."
          },
          "postalCode": {
            "type": [
              "string",
              "null"
            ],
            "description": "The postal code."
          },
          "state": {
            "type": [
              "string",
              "null"
            ],
            "description": "The state."
          },
          "street": {
            "type": [
              "string",
              "null"
            ],
            "description": "The street."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "outlookGeoCoordinates": {
        "title": "outlookGeoCoordinates",
        "type": "object",
        "properties": {
          "accuracy": {
            "type": [
              "number",
              "null"
            ],
            "description": "The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters."
          },
          "altitude": {
            "type": [
              "number",
              "null"
            ],
            "description": "The altitude of the location."
          },
          "altitudeAccuracy": {
            "type": [
              "number",
              "null"
            ],
            "description": "The accuracy of the altitude."
          },
          "latitude": {
            "type": [
              "number",
              "null"
            ],
            "description": "The latitude of the location."
          },
          "longitude": {
            "type": [
              "number",
              "null"
            ],
            "description": "The longitude of the location."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "bookingType": {
        "title": "bookingType",
        "enum": [
          "unknown",
          "standard",
          "reserved"
        ],
        "type": "string"
      },
      "microsoft.graph.ODataErrors.ODataError": {
        "title": "microsoft.graph.ODataErrors.ODataError",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ODataErrors.MainError"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "CollectionofcalendarPermission": {
        "title": "CollectionofcalendarPermission",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.calendarPermission"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "Collectionofevent": {
        "title": "Collectionofevent",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.event"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "Collectionofattachment": {
        "title": "Collectionofattachment",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.attachment"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "Collectionofextension": {
        "title": "Collectionofextension",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.extension"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "Collectionofroom": {
        "title": "Collectionofroom",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.room"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "CollectionofroomList": {
        "title": "CollectionofroomList",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.roomList"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "CollectionofcalendarGroup": {
        "title": "CollectionofcalendarGroup",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "Collectionofcalendar": {
        "title": "Collectionofcalendar",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.calendar"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.attendeeBase": {
        "title": "microsoft.graph.attendeeBase",
        "type": "object",
        "properties": {
          "emailAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/emailAddress"
              },
              {}
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attendeeType"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "bodyType": {
        "title": "bodyType",
        "enum": [
          "text",
          "html"
        ],
        "type": "string"
      },
      "locationType": {
        "title": "locationType",
        "enum": [
          "default",
          "conferenceRoom",
          "homeAddress",
          "businessAddress",
          "geoCoordinates",
          "streetAddress",
          "hotel",
          "restaurant",
          "localBusiness",
          "postalAddress"
        ],
        "type": "string"
      },
      "locationUniqueIdType": {
        "title": "locationUniqueIdType",
        "enum": [
          "unknown",
          "locationStore",
          "directory",
          "private",
          "bing"
        ],
        "type": "string"
      },
      "phone": {
        "title": "phone",
        "type": "object",
        "properties": {
          "language": {
            "type": [
              "string",
              "null"
            ]
          },
          "number": {
            "type": [
              "string",
              "null"
            ],
            "description": "The phone number."
          },
          "region": {
            "type": [
              "string",
              "null"
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/phoneType"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "recurrencePattern": {
        "title": "recurrencePattern",
        "type": "object",
        "properties": {
          "dayOfMonth": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": "integer",
            "description": "The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.",
            "contentEncoding": "int32"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dayOfWeek"
            },
            "description": "A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly."
          },
          "firstDayOfWeek": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dayOfWeek"
              },
              {}
            ]
          },
          "index": {
            "allOf": [
              {
                "$ref": "#/components/schemas/weekIndex"
              },
              {}
            ]
          },
          "interval": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": "integer",
            "description": "The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.",
            "contentEncoding": "int32"
          },
          "month": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": "integer",
            "description": "The month in which the event occurs.  This is a number from 1 to 12.",
            "contentEncoding": "int32"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/recurrencePatternType"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "recurrenceRange": {
        "title": "recurrenceRange",
        "type": "object",
        "properties": {
          "endDate": {
            "type": [
              "string",
              "null"
            ],
            "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.",
            "contentEncoding": "date"
          },
          "numberOfOccurrences": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": "integer",
            "description": "The number of times to repeat the event. Required and must be positive if type is numbered.",
            "contentEncoding": "int32"
          },
          "recurrenceTimeZone": {
            "type": [
              "string",
              "null"
            ],
            "description": "Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used."
          },
          "startDate": {
            "type": [
              "string",
              "null"
            ],
            "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.",
            "contentEncoding": "date"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/recurrenceRangeType"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "responseType": {
        "title": "responseType",
        "enum": [
          "none",
          "organizer",
          "tentativelyAccepted",
          "accepted",
          "declined",
          "notResponded"
        ],
        "type": "string"
      },
      "dayOfWeek": {
        "title": "dayOfWeek",
        "enum": [
          "sunday",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday"
        ],
        "type": "string"
      },
      "timeZoneBase": {
        "title": "timeZoneBase",
        "type": "object",
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ],
            "description": "The name of a time zone. It can be a standard time zone name such as 'Hawaii-Aleutian Standard Time', or 'Customized Time Zone' for a custom time zone."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ReferenceNumeric": {
        "title": "ReferenceNumeric",
        "enum": [
          "-INF",
          "INF",
          "NaN"
        ],
        "type": "string"
      },
      "microsoft.graph.ODataErrors.MainError": {
        "title": "microsoft.graph.ODataErrors.MainError",
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": [
              "string",
              "null"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ErrorDetails"
            },
            "description": ""
          },
          "innerError": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "The structure of this object is service-specific"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "attendeeType": {
        "title": "attendeeType",
        "enum": [
          "required",
          "optional",
          "resource"
        ],
        "type": "string"
      },
      "phoneType": {
        "title": "phoneType",
        "enum": [
          "home",
          "business",
          "mobile",
          "other",
          "assistant",
          "homeFax",
          "businessFax",
          "otherFax",
          "pager",
          "radio"
        ],
        "type": "string"
      },
      "weekIndex": {
        "title": "weekIndex",
        "enum": [
          "first",
          "second",
          "third",
          "fourth",
          "last"
        ],
        "type": "string"
      },
      "recurrencePatternType": {
        "title": "recurrencePatternType",
        "enum": [
          "daily",
          "weekly",
          "absoluteMonthly",
          "relativeMonthly",
          "absoluteYearly",
          "relativeYearly"
        ],
        "type": "string"
      },
      "recurrenceRangeType": {
        "title": "recurrenceRangeType",
        "enum": [
          "endDate",
          "noEnd",
          "numbered"
        ],
        "type": "string"
      },
      "microsoft.graph.ODataErrors.ErrorDetails": {
        "title": "microsoft.graph.ODataErrors.ErrorDetails",
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "Collectionofevent1": {
        "title": "Collectionofevent1",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.event"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          },
          "@odata.deltaLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "GroupsCalendarCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "GroupsCalendarCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "GroupsCalendarCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewMicrosoftGraphAcceptRequest": {
        "title": "GroupsCalendarCalendarViewMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewMicrosoftGraphCancelRequest": {
        "title": "GroupsCalendarCalendarViewMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewMicrosoftGraphDeclineRequest": {
        "title": "GroupsCalendarCalendarViewMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewMicrosoftGraphForwardRequest": {
        "title": "GroupsCalendarCalendarViewMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewMicrosoftGraphSnoozeReminderRequest": {
        "title": "GroupsCalendarCalendarViewMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarCalendarViewMicrosoftGraphTentativelyAcceptRequest": {
        "title": "GroupsCalendarCalendarViewMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "GroupsCalendarEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "GroupsCalendarEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "GroupsCalendarEventsInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "GroupsCalendarEventsInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "GroupsCalendarEventsInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "GroupsCalendarEventsInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "GroupsCalendarEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "GroupsCalendarEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsMicrosoftGraphAcceptRequest": {
        "title": "GroupsCalendarEventsMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsMicrosoftGraphCancelRequest": {
        "title": "GroupsCalendarEventsMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsMicrosoftGraphDeclineRequest": {
        "title": "GroupsCalendarEventsMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsMicrosoftGraphForwardRequest": {
        "title": "GroupsCalendarEventsMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsMicrosoftGraphSnoozeReminderRequest": {
        "title": "GroupsCalendarEventsMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarEventsMicrosoftGraphTentativelyAcceptRequest": {
        "title": "GroupsCalendarEventsMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarMicrosoftGraphAllowedCalendarSharingRolesUserAPIResponse": {
        "title": "GroupsCalendarMicrosoftGraphAllowedCalendarSharingRolesUserAPIResponse",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/calendarRoleType"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarMicrosoftGraphGetScheduleRequest": {
        "title": "GroupsCalendarMicrosoftGraphGetScheduleRequest",
        "type": "object",
        "properties": {
          "Schedules": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ]
            },
            "description": ""
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "AvailabilityViewInterval": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": [
              "integer",
              "null"
            ],
            "contentEncoding": "int32"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarMicrosoftGraphGetScheduleResponse": {
        "title": "GroupsCalendarMicrosoftGraphGetScheduleResponse",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/scheduleInformation"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "GroupsCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "GroupsCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "GroupsCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "GroupsCalendarViewInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "GroupsCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "GroupsCalendarViewInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "GroupsCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "GroupsCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewMicrosoftGraphAcceptRequest": {
        "title": "GroupsCalendarViewMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewMicrosoftGraphCancelRequest": {
        "title": "GroupsCalendarViewMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewMicrosoftGraphDeclineRequest": {
        "title": "GroupsCalendarViewMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewMicrosoftGraphForwardRequest": {
        "title": "GroupsCalendarViewMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewMicrosoftGraphSnoozeReminderRequest": {
        "title": "GroupsCalendarViewMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsCalendarViewMicrosoftGraphTentativelyAcceptRequest": {
        "title": "GroupsCalendarViewMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "GroupsEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "GroupsEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "GroupsEventsInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "GroupsEventsInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "GroupsEventsInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "GroupsEventsInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "GroupsEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "GroupsEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsMicrosoftGraphAcceptRequest": {
        "title": "GroupsEventsMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsMicrosoftGraphCancelRequest": {
        "title": "GroupsEventsMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsMicrosoftGraphDeclineRequest": {
        "title": "GroupsEventsMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsMicrosoftGraphForwardRequest": {
        "title": "GroupsEventsMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsMicrosoftGraphSnoozeReminderRequest": {
        "title": "GroupsEventsMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "GroupsEventsMicrosoftGraphTentativelyAcceptRequest": {
        "title": "GroupsEventsMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewMicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarCalendarViewMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewMicrosoftGraphCancelRequest": {
        "title": "UsersCalendarCalendarViewMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewMicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarCalendarViewMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewMicrosoftGraphForwardRequest": {
        "title": "UsersCalendarCalendarViewMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewMicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarCalendarViewMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarCalendarViewMicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarCalendarViewMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarEventsInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "UsersCalendarEventsInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarEventsInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "UsersCalendarEventsInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsMicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarEventsMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsMicrosoftGraphCancelRequest": {
        "title": "UsersCalendarEventsMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsMicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarEventsMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsMicrosoftGraphForwardRequest": {
        "title": "UsersCalendarEventsMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsMicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarEventsMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarEventsMicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarEventsMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarMicrosoftGraphAllowedCalendarSharingRolesUserAPIResponse": {
        "title": "UsersCalendarMicrosoftGraphAllowedCalendarSharingRolesUserAPIResponse",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/calendarRoleType"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarMicrosoftGraphGetScheduleRequest": {
        "title": "UsersCalendarMicrosoftGraphGetScheduleRequest",
        "type": "object",
        "properties": {
          "Schedules": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ]
            },
            "description": ""
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "AvailabilityViewInterval": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": [
              "integer",
              "null"
            ],
            "contentEncoding": "int32"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarMicrosoftGraphGetScheduleResponse": {
        "title": "UsersCalendarMicrosoftGraphGetScheduleResponse",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/scheduleInformation"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphCancelRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphForwardRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdCalendarViewEventIdMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphCancelRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphForwardRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdEventsEventIdMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdMicrosoftGraphAllowedCalendarSharingRolesUserUserAPIResponse": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdMicrosoftGraphAllowedCalendarSharingRolesUserUserAPIResponse",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/calendarRoleType"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdMicrosoftGraphGetScheduleRequest": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdMicrosoftGraphGetScheduleRequest",
        "type": "object",
        "properties": {
          "Schedules": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ]
            },
            "description": ""
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "AvailabilityViewInterval": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": [
              "integer",
              "null"
            ],
            "contentEncoding": "int32"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarGroupsCalendarsCalendarIdMicrosoftGraphGetScheduleResponse": {
        "title": "UsersCalendarGroupsCalendarsCalendarIdMicrosoftGraphGetScheduleResponse",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/scheduleInformation"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarsCalendarViewEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarsCalendarViewEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarsCalendarViewEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdMicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarsCalendarViewEventIdMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdMicrosoftGraphCancelRequest": {
        "title": "UsersCalendarsCalendarViewEventIdMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdMicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarsCalendarViewEventIdMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdMicrosoftGraphForwardRequest": {
        "title": "UsersCalendarsCalendarViewEventIdMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdMicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarsCalendarViewEventIdMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsCalendarViewEventIdMicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarsCalendarViewEventIdMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarsEventsEventIdAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarsEventsEventIdInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarsEventsEventIdInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdMicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarsEventsEventIdMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdMicrosoftGraphCancelRequest": {
        "title": "UsersCalendarsEventsEventIdMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdMicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarsEventsEventIdMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdMicrosoftGraphForwardRequest": {
        "title": "UsersCalendarsEventsEventIdMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdMicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarsEventsEventIdMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsEventsEventIdMicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarsEventsEventIdMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsMicrosoftGraphAllowedCalendarSharingRolesUserUserAPIResponse": {
        "title": "UsersCalendarsMicrosoftGraphAllowedCalendarSharingRolesUserUserAPIResponse",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/calendarRoleType"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsMicrosoftGraphGetScheduleRequest": {
        "title": "UsersCalendarsMicrosoftGraphGetScheduleRequest",
        "type": "object",
        "properties": {
          "Schedules": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ]
            },
            "description": ""
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          },
          "AvailabilityViewInterval": {
            "maximum": 2147483647.0,
            "minimum": -2147483648.0,
            "type": [
              "integer",
              "null"
            ],
            "contentEncoding": "int32"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarsMicrosoftGraphGetScheduleResponse": {
        "title": "UsersCalendarsMicrosoftGraphGetScheduleResponse",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/scheduleInformation"
            },
            "description": ""
          },
          "@odata.nextLink": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarViewAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersCalendarViewInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarViewInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "UsersCalendarViewInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarViewInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "UsersCalendarViewInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarViewInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarViewInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewMicrosoftGraphAcceptRequest": {
        "title": "UsersCalendarViewMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewMicrosoftGraphCancelRequest": {
        "title": "UsersCalendarViewMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewMicrosoftGraphDeclineRequest": {
        "title": "UsersCalendarViewMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewMicrosoftGraphForwardRequest": {
        "title": "UsersCalendarViewMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewMicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersCalendarViewMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersCalendarViewMicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersCalendarViewMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersEventsAttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest": {
        "title": "UsersEventsInstancesEventId1AttachmentsMicrosoftGraphCreateUploadSessionRequest",
        "type": "object",
        "properties": {
          "AttachmentItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attachmentItem"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsInstancesEventId1MicrosoftGraphAcceptRequest": {
        "title": "UsersEventsInstancesEventId1MicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsInstancesEventId1MicrosoftGraphCancelRequest": {
        "title": "UsersEventsInstancesEventId1MicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsInstancesEventId1MicrosoftGraphDeclineRequest": {
        "title": "UsersEventsInstancesEventId1MicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsInstancesEventId1MicrosoftGraphForwardRequest": {
        "title": "UsersEventsInstancesEventId1MicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersEventsInstancesEventId1MicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersEventsInstancesEventId1MicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsMicrosoftGraphAcceptRequest": {
        "title": "UsersEventsMicrosoftGraphAcceptRequest",
        "type": "object",
        "properties": {
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsMicrosoftGraphCancelRequest": {
        "title": "UsersEventsMicrosoftGraphCancelRequest",
        "type": "object",
        "properties": {
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsMicrosoftGraphDeclineRequest": {
        "title": "UsersEventsMicrosoftGraphDeclineRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsMicrosoftGraphForwardRequest": {
        "title": "UsersEventsMicrosoftGraphForwardRequest",
        "type": "object",
        "properties": {
          "ToRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient"
            },
            "description": ""
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsMicrosoftGraphSnoozeReminderRequest": {
        "title": "UsersEventsMicrosoftGraphSnoozeReminderRequest",
        "type": "object",
        "properties": {
          "NewReminderTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dateTimeTimeZone"
              },
              {}
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "UsersEventsMicrosoftGraphTentativelyAcceptRequest": {
        "title": "UsersEventsMicrosoftGraphTentativelyAcceptRequest",
        "type": "object",
        "properties": {
          "ProposedNewTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/timeSlot"
              },
              {}
            ]
          },
          "SendResponse": {
            "type": [
              "boolean",
              "null"
            ],
            "default": false
          },
          "Comment": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      }
    },
    "securitySchemes": {
      "azureaadv2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
            "tokenUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
            "scopes": {}
          }
        }
      }
    }
  },
  "security": [
    {
      "azureaadv2": []
    }
  ],
  "tags": [
    {
      "name": "groups.calendar",
      "description": ""
    },
    {
      "name": "groups.event",
      "description": ""
    },
    {
      "name": "places.place",
      "description": ""
    },
    {
      "name": "places.room",
      "description": ""
    },
    {
      "name": "users.calendar",
      "description": ""
    },
    {
      "name": "users.calendarGroup",
      "description": ""
    },
    {
      "name": "users.event",
      "description": ""
    }
  ]
}